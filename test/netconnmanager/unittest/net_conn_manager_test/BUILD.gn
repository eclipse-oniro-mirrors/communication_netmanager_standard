# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import(
    "//foundation/communication/netmanager_standard/netmanager_base_config.gni")

ohos_unittest("net_conn_manager_test") {
  module_out_path = "netmanager_base/net_conn_manager_test"

  sources = [
    "net_conn_callback_test.cpp",
    "net_conn_manager_test.cpp",
    "net_detection_callback_test.cpp",
    "net_handler_test.cpp",
    "net_score_test.cpp",
    "route_utils_test.cpp",
  ]

  include_dirs = [
    "$INNERKITS_ROOT/include",
    "$INNERKITS_ROOT/netconnclient/include",
    "$INNERKITS_ROOT/netconnclient/include/proxy",
    "$NETCONNMANAGER_SOURCE_DIR/include/stub",
    "$NETCONNMANAGER_SOURCE_DIR/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "$NETMANAGERNATIVE_ROOT/net_mgr_native/include",
    "$NETMANAGERNATIVE_ROOT/common/include",
    "$NETMANAGER_BASE_ROOT/services/common/include",
  ]

  deps = [
    "$INNERKITS_ROOT/netconnclient:net_conn_manager_if",
    "$NETCONNMANAGER_SOURCE_DIR:net_conn_manager",
    "$NETMANAGER_BASE_ROOT/utils:net_manager_common",
  ]

  external_deps = [
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  defines = [
    "NETMGR_LOG_TAG = \"NetConnManager\"",
    "LOG_DOMAIN = 0xD0015B0",
  ]

  if (enable_netmgr_debug) {
    defines += [ "NETMGR_DEBUG" ]
  }

  if (is_standard_system) {
    external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  if (enable_sys_dns) {
    defines += [ "SYS_DNS" ]
  }

  part_name = "netmanager_standard"
  subsystem_name = "communication"
}

group("unittest") {
  testonly = true
  deps = [ ":net_conn_manager_test" ]
}
